
[2025-10-28 19:52:07 GMT] Clipboard content before clearing:
------------------------------------------------------------

------------------------------------------------------------
[2025-10-28 19:52:07 GMT] Clipboard cleared (Linux, xclip)
[28-10-2025 19:52:13 GMT] Clipboard cleared (Linux, xclip)
[2025-10-28 19:54:52 GMT] Clipboard cleared (Linux, xclip)

[2025-10-28 19:55:42 GMT] Clipboard content before clearing:
------------------------------------------------------------

------------------------------------------------------------
[2025-10-28 19:55:42 GMT] Clipboard cleared (Linux, xclip)
[28-10-2025 19:56:13 GMT] Clipboard cleared (Linux, xclip)

[2025-10-28 19:56:25 GMT] Clipboard content before clearing:
------------------------------------------------------------

------------------------------------------------------------
[2025-10-28 19:56:25 GMT] Clipboard cleared (Linux, xclip)
[28-10-2025 19:56:35 GMT] Clipboard cleared (Linux, xclip)
[2025-10-28 19:56:48 GMT] Clipboard contents before clearing: <empty>
[2025-10-28 19:56:48 GMT] Clipboard cleared.

[2025-10-28 19:57:07 GMT] Clipboard content before clearing:
------------------------------------------------------------
Excellent ‚Äî here‚Äôs the **complete setup** combining your clipboard-clear script with a **systemd timer**, which runs periodically (e.g. every 5 minutes) instead of staying alive as a daemon.

This version is **more resource-efficient**, ideal for laptops or systems where you don‚Äôt want a constant background process.

---

## üß© Clipboard Auto-Clear (Systemd Timer Version)

### 1Ô∏è‚É£ Script ‚Äî `auto_clear_clipboard.sh`

Save this in your scripts folder (e.g. `~/scripts/auto_clear_clipboard.sh`):

```bash
#!/usr/bin/env bash
# auto_clear_clipboard.sh
# Clears the clipboard, logs its previous contents, and sends a notification.
# Designed for use with systemd timer. Compatible with Linux/macOS.

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LOG_FILE="$SCRIPT_DIR/clipboard_clear_log.txt"
export TZ="Europe/London"

log() {
    local msg="[$(date '+%Y-%m-%d %H:%M:%S %Z')] $1"
    echo "$msg" | tee -a "$LOG_FILE"
}

notify_user() {
    local message="$1"
    if command -v notify-send &>/dev/null; then
        notify-send "Clipboard Auto Clear" "$message"
    elif command -v osascript &>/dev/null; then
        osascript -e "display notification \"$message\" with title \"Clipboard Auto Clear\""
    fi
}

get_clipboard_content() {
    if command -v pbpaste &>/dev/null; then
        pbpaste
    elif command -v xclip &>/dev/null; then
        xclip -selection clipboard -o 2>/dev/null
    elif command -v xsel &>/dev/null; then
        xsel --clipboard --output 2>/dev/null
    else
        echo ""
    fi
}

clear_clipboard() {
    local before_clear
    before_clear="$(get_clipboard_content)"
    log "Clipboard contents before clearing: ${before_clear:-<empty>}"

    if command -v pbcopy &>/dev/null; then
        echo -n "" | pbcopy
    elif command -v xclip &>/dev/null; then
        echo -n "" | xclip -selection clipboard
    elif command -v xsel &>/dev/null; then
        echo -n "" | xsel --clipboard --input
    fi

    log "Clipboard cleared."
    notify_user "Clipboard cleared and logged."
}

clear_clipboard
```

Make it executable:

```bash
chmod +x ~/scripts/auto_clear_clipboard.sh
```

---

### 2Ô∏è‚É£ Service ‚Äî `~/.config/systemd/user/clipboard-clear.service`

```ini
[Unit]
Description=Clear Clipboard Contents

[Service]
Type=oneshot
ExecStart=%h/scripts/auto_clear_clipboard.sh
Environment=DISPLAY=:0
Environment=DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/%U/bus
```

*(Make sure the `ExecStart` path points to your actual script location.)*

---

### 3Ô∏è‚É£ Timer ‚Äî `~/.config/systemd/user/clipboard-clear.timer`

```ini
[Unit]
Description=Run clipboard clear every 5 minutes

[Timer]
OnBootSec=1min
OnUnitActiveSec=5min
Persistent=true

[Install]
WantedBy=timers.target
```

You can adjust the schedule:

* `OnUnitActiveSec=10min` ‚Üí every 10 minutes
* `OnUnitActiveSec=1h` ‚Üí every hour

---

### 4Ô∏è‚É£ Enable & Start

```bash
systemctl --user daemon-reload
systemctl --user enable --now clipboard-clear.timer
```

---

### 5Ô∏è‚É£ Check Status

**Timer activity:**

```bash
systemctl --user list-timers
```

**Logs:**

```bash
journalctl --user -u clipboard-clear.service
```

**Clipboard log file:**

```bash
cat ~/scripts/clipboard_clear_log.txt
```

---

### ‚úÖ Summary

| Action                | Command                                                |
| :-------------------- | :----------------------------------------------------- |
| Manually clear once   | `~/scripts/auto_clear_clipboard.sh`                    |
| Enable periodic clear | `systemctl --user enable --now clipboard-clear.timer`  |
| Check schedule        | `systemctl --user list-timers`                         |
| Disable timer         | `systemctl --user disable --now clipboard-clear.timer` |
| Logs                  | `clipboard_clear_log.txt` in script‚Äôs folder           |

---

Would you like me to extend this timer setup so that it **only clears the clipboard if it contains text older than N minutes** (i.e., check last modified timestamp before clearing)? That would make it even smarter and less intrusive.
------------------------------------------------------------
[2025-10-28 19:57:07 GMT] Clipboard cleared (Linux, xclip)
[28-10-2025 19:57:13 GMT] Clipboard cleared (Linux, xclip)
